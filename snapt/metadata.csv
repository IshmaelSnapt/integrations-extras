metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name
snapt.balancer.backend.active.servers,gauge,,,,Current number of active servers.,0,snapt_balancer,
snapt.balancer.backend.backup.servers,gauge,,,,Current number of backup servers.,0,snapt_balancer,
snapt.balancer.backend.bytes.in.total,count,,byte,,Current total of incoming bytes. By default submitted as count if using prometheus,0,snapt_balancer,
snapt.balancer.backend.bytes.out.total,count,,byte,,Current total of outgoing bytes. By default submitted as count if using prometheus,0,snapt_balancer,
snapt.balancer.backend.check.last.change.seconds,gauge,,,,Number of seconds since the last UP<->DOWN transition.,0,snapt_balancer,
snapt.balancer.backend.check.up.down.total,count,,,,Total number of UP->DOWN transitions.,0,snapt_balancer,
snapt.balancer.backend.client.aborts.total,count,,,,Total number of data transfers aborted by the client.,0,snapt_balancer,
snapt.balancer.backend.connect.time.average.seconds,gauge,,,,Avg. connect time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.backend.connection.attempts.total,count,,,,Total number of connection establishment attempts.,0,snapt_balancer,
snapt.balancer.backend.connection.errors.total,count,,,,Total number of connection errors.,0,snapt_balancer,
snapt.balancer.backend.connection.reuses.total,count,,,,Total number of connection reuses.,0,snapt_balancer,
snapt.balancer.backend.current.queue,gauge,,,,Current number of queued requests.,0,snapt_balancer,
snapt.balancer.backend.current.sessions,gauge,,,,Current number of active sessions.,0,snapt_balancer,
snapt.balancer.backend.downtime.seconds.total,count,,,,Total downtime (in seconds) for the service.,0,snapt_balancer,
snapt.balancer.backend.failed.header.rewriting.total,count,,,,Total number of failed header rewriting warnings.,0,snapt_balancer,
snapt.balancer.backend.http.cache.hits.total,count,,,,Total number of HTTP cache hits.,0,snapt_balancer,
snapt.balancer.backend.http.cache.lookups.total,count,,,,Total number of HTTP cache lookups.,0,snapt_balancer,
snapt.balancer.backend.http.comp.bytes.bypassed.total,count,,byte,,Total number of bytes that bypassed the HTTP compressor (CPU/BW limit).,0,snapt_balancer,
snapt.balancer.backend.http.comp.bytes.in.total,count,,byte,,Total number of HTTP response bytes fed to the compressor.,0,snapt_balancer,
snapt.balancer.backend.http.comp.bytes.out.total,count,,byte,,Total number of HTTP response bytes emitted by the compressor.,0,snapt_balancer,
snapt.balancer.backend.http.comp.responses.total,count,,,,Total number of HTTP responses that were compressed.,0,snapt_balancer,
snapt.balancer.backend.http.requests.total,count,,,,Total number of HTTP requests received.,0,snapt_balancer,
snapt.balancer.backend.http.responses.total,count,,,,Total number of HTTP responses.,0,snapt_balancer,
snapt.balancer.backend.internal.errors.total,count,,,,Total number of internal errors since process started (since >= 2.2).,0,snapt_balancer,
snapt.balancer.backend.last.session.seconds,gauge,,,,Number of seconds since last session assigned to server/backend.,0,snapt_balancer,
snapt.balancer.backend.limit.sessions,gauge,,,,Configured session limit.,0,snapt_balancer,
snapt.balancer.backend.loadbalanced.total,count,,,,"Total number of times a service was selected, either for new sessions, or when redispatching.",0,snapt_balancer,
snapt.balancer.backend.max.connect.time.seconds,gauge,,,,Maximum observed time spent waiting for a connection to complete,0,snapt_balancer,
snapt.balancer.backend.max.queue,gauge,,,,Maximum observed number of queued requests.,0,snapt_balancer,
snapt.balancer.backend.max.queue.time.seconds,gauge,,,,Maximum observed time spent in the queue,0,snapt_balancer,
snapt.balancer.backend.max.response.time.seconds,gauge,,,,Maximum observed time spent waiting for a server response,0,snapt_balancer,
snapt.balancer.backend.max.session.rate,gauge,,,,Maximum observed number of sessions per second.,0,snapt_balancer,
snapt.balancer.backend.max.sessions,gauge,,,,Maximum observed number of active sessions.,0,snapt_balancer,
snapt.balancer.backend.max.total.time.seconds,gauge,,,,Maximum observed total request+response time (request+queue+connect+response+processing),0,snapt_balancer,
snapt.balancer.backend.queue.time.average.seconds,gauge,,,,Avg. queue time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.backend.redispatch.warnings.total,count,,,,Total number of redispatch warnings.,0,snapt_balancer,
snapt.balancer.backend.requests.denied.total,count,,,,Total number of denied requests.,0,snapt_balancer,
snapt.balancer.backend.response.errors.total,count,,,,Total number of response errors.,0,snapt_balancer,
snapt.balancer.backend.response.time.average.seconds,gauge,,,,Avg. response time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.backend.responses.denied.total,count,,,,Total number of denied responses.,0,snapt_balancer,
snapt.balancer.backend.retry.warnings.total,count,,,,Total number of retry warnings.,0,snapt_balancer,
snapt.balancer.backend.server.aborts.total,count,,,,Total number of data transfers aborted by the server.,0,snapt_balancer,
snapt.balancer.backend.sessions.total,count,,,,Total number of sessions.,0,snapt_balancer,
snapt.balancer.backend.status,gauge,,,,"Current status of the service. <= 2.3: gauge value determines state (frontend: 0=STOP, 1=UP, 2=FULL - backend: 0=DOWN, 1=UP - server: 0=DOWN, 1=UP, 2=MAINT, 3=DRAIN, 4=NOLB). >= 2.4 per state label value.",0,snapt_balancer,
snapt.balancer.backend.total.time.average.seconds,gauge,,,,Avg. total time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.backend.uweight,gauge,,,,Server's user weight or sum of active servers' user weights for a backend (>= 2.4).,0,snapt_balancer,
snapt.balancer.backend.weight,gauge,,,,Service weight.,0,snapt_balancer,
snapt.balancer.backend_hosts,gauge,,host,,Number of backend hosts (legacy check only).,0,snapt_balancer,backend hosts
snapt.balancer.backend.bytes.in_rate,gauge,,byte,second,Rate of bytes in on backend hosts (legacy check only).,0,snapt_balancer,backend bytes in rate
snapt.balancer.backend.bytes.out_rate,gauge,,byte,second,Rate of bytes out on backend hosts (legacy check only).,0,snapt_balancer,backend bytes out rate
snapt.balancer.backend.connect.time,gauge,,millisecond,,Average connect time over the last 1024 backend requests (legacy check only).,0,snapt_balancer,backend conn time
snapt.balancer.backend.denied.req_rate,gauge,,request,second,Number of backend requests denied due to security concerns (legacy check only).,-1,snapt_balancer,backend den req rate
snapt.balancer.backend.denied.resp_rate,gauge,,response,second,Number of backend responses denied due to security concerns (legacy check only).,-1,snapt_balancer,backend den resp rate
snapt.balancer.backend.errors.con_rate,gauge,,error,second,Rate of backend requests that encountered an error trying to connect to a backend server (legacy check only).,-1,snapt_balancer,backend err conn rate
snapt.balancer.backend.errors.resp_rate,gauge,,error,second,Rate of backend responses aborted due to error (legacy check only).,-1,snapt_balancer,backend err resp rate
snapt.balancer.backend.queue.current,gauge,,request,,Number of backend requests without an assigned backend (legacy check only).,0,snapt_balancer,backend queue
snapt.balancer.backend.queue.time,gauge,,millisecond,,Average queue time over the last 1024 backend requests (legacy check only).,0,snapt_balancer,backend queue time
snapt.balancer.backend.response.1xx,gauge,,response,,Backend HTTP responses with 1xx code (legacy check only).,0,snapt_balancer,backend resp 1xx
snapt.balancer.backend.response.2xx,gauge,,response,,Backend HTTP responses with 2xx code (legacy check only).,0,snapt_balancer,backend resp 2xx
snapt.balancer.backend.response.3xx,gauge,,response,,Backend HTTP responses with 3xx code (legacy check only).,0,snapt_balancer,backend resp 3xx
snapt.balancer.backend.response.4xx,gauge,,response,,Backend HTTP responses with 4xx code (legacy check only).,-1,snapt_balancer,backend resp 4xx
snapt.balancer.backend.response.5xx,gauge,,response,,Backend HTTP responses with 5xx code (legacy check only).,-1,snapt_balancer,backend resp 5xx
snapt.balancer.backend.response.other,gauge,,response,,"Backend HTTP responses with other code (protocol error, legacy check only).",0,snapt_balancer,backend resp other
snapt.balancer.backend.response.time,gauge,,millisecond,,"Average response time over the last 1024 backend requests (0 for TCP, legacy check only).",-1,snapt_balancer,backend resp time
snapt.balancer.backend.requests.tot_rate,gauge,,request,second,Rate of total number of backend HTTP requests (legacy check only).,0,snapt_balancer,backend total req rate
snapt.balancer.backend.session.current,gauge,,connection,,Number of active backend sessions (legacy check only).,0,snapt_balancer,backend sess
snapt.balancer.backend.session.limit,gauge,,connection,,Configured backend session limit (legacy check only).,0,snapt_balancer,backend sess lim
snapt.balancer.backend.session.pct,gauge,,percent,,"Percentage of sessions in use (backend.session.current/backend.session.limit * 100, legacy check only).",-1,snapt_balancer,backend sess pct
snapt.balancer.backend.session.rate,gauge,,connection,second,Number of backend sessions created per second (legacy check only).,0,snapt_balancer,backend sess rate
snapt.balancer.backend.session.time,gauge,,millisecond,,Average total session time over the last 1024 requests (legacy check only).,0,snapt_balancer,backend sess time
snapt.balancer.backend.uptime,gauge,,second,,Number of seconds since the last UP<->DOWN transition (legacy check only),0,snapt_balancer,backend uptime
snapt.balancer.backend.warnings.redis_rate,gauge,,error,second,Number of times a request was redispatched to another server (legacy check only).,-1,snapt_balancer,backend warn redis rate
snapt.balancer.backend.warnings.retr_rate,gauge,,error,second,Number of times a connection to a server was retried (legacy check only).,-1,snapt_balancer,backend warn retry rate
snapt.balancer.count_per_status,gauge,,host,,Number of hosts by status (UP/DOWN/NOLB/MAINT) (legacy check only).,0,snapt_balancer,hosts status
snapt.balancer.frontend.bytes.in.total,count,,byte,,Current total of incoming bytes. By default submitted as count if using prometheus,0,snapt_balancer,
snapt.balancer.frontend.bytes.out.total,count,,byte,,Current total of outgoing bytes. By default submitted as count if using prometheus,0,snapt_balancer,
snapt.balancer.frontend.connections.rate.max,gauge,,,,Maximum observed number of connections per second.,0,snapt_balancer,
snapt.balancer.frontend.connections.total,count,,,,Total number of connections.,0,snapt_balancer,
snapt.balancer.frontend.current.sessions,gauge,,,,Current number of active sessions.,0,snapt_balancer,
snapt.balancer.frontend.denied.connections.total,count,,,,Total number of requests denied by 'tcp-request connection' rules.,0,snapt_balancer,
snapt.balancer.frontend.denied.sessions.total,count,,,,Total number of requests denied by 'tcp-request session' rules.,0,snapt_balancer,
snapt.balancer.frontend.failed.header.rewriting.total,count,,,,Total number of failed header rewriting warnings.,0,snapt_balancer,
snapt.balancer.frontend.http.cache.hits.total,count,,,,Total number of HTTP cache hits.,0,snapt_balancer,
snapt.balancer.frontend.http.cache.lookups.total,count,,,,Total number of HTTP cache lookups.,0,snapt_balancer,
snapt.balancer.frontend.http.comp.bytes.bypassed.total,count,,byte,,Total number of bytes that bypassed the HTTP compressor (CPU/BW limit).,0,snapt_balancer,
snapt.balancer.frontend.http.comp.bytes.in.total,count,,byte,,Total number of HTTP response bytes fed to the compressor.,0,snapt_balancer,
snapt.balancer.frontend.http.comp.bytes.out.total,count,,byte,,Total number of HTTP response bytes emitted by the compressor.,0,snapt_balancer,
snapt.balancer.frontend.http.comp.responses.total,count,,,,Total number of HTTP responses that were compressed.,0,snapt_balancer,
snapt.balancer.frontend.http.requests.rate.max,gauge,,,,Maximum observed number of HTTP requests per second.,0,snapt_balancer,
snapt.balancer.frontend.http.requests.total,count,,,,Total number of HTTP requests received.,0,snapt_balancer,
snapt.balancer.frontend.http.responses.total,count,,,,Total number of HTTP responses.,0,snapt_balancer,
snapt.balancer.frontend.intercepted.requests.total,count,,,,Total number of intercepted HTTP requests.,0,snapt_balancer,
snapt.balancer.frontend.internal.errors.total,count,,,,Total number of internal errors since process started (since >= 2.2).,0,snapt_balancer,
snapt.balancer.frontend.limit.session.rate,gauge,,,,Configured limit on new sessions per second.,0,snapt_balancer,
snapt.balancer.frontend.limit.sessions,gauge,,,,Configured session limit.,0,snapt_balancer,
snapt.balancer.frontend.max.session.rate,gauge,,,,Maximum observed number of sessions per second.,0,snapt_balancer,
snapt.balancer.frontend.max.sessions,gauge,,,,Maximum observed number of active sessions.,0,snapt_balancer,
snapt.balancer.frontend.request.errors.total,count,,,,Total number of request errors.,0,snapt_balancer,
snapt.balancer.frontend.requests.denied.total,count,,,,Total number of denied requests.,0,snapt_balancer,
snapt.balancer.frontend.responses.denied.total,count,,,,Total number of denied responses.,0,snapt_balancer,
snapt.balancer.frontend.sessions.total,count,,,,Total number of sessions.,0,snapt_balancer,
snapt.balancer.frontend.status,gauge,,,,"Current status of the service. <= 2.3: gauge value determines state (frontend: 0=STOP, 1=UP, 2=FULL - backend: 0=DOWN, 1=UP - server: 0=DOWN, 1=UP, 2=MAINT, 3=DRAIN, 4=NOLB). >= 2.4 per state label value.",0,snapt_balancer,
snapt.balancer.frontend.bytes.in_rate,gauge,,byte,second,Rate of bytes in on frontend hosts (legacy check only).,0,snapt_balancer,frontend bytes in rate
snapt.balancer.frontend.bytes.out_rate,gauge,,byte,second,Rate of bytes out on frontend hosts (legacy check only).,0,snapt_balancer,frontend bytes out rate
snapt.balancer.frontend.connections.rate,gauge,,connection,second,Number of connections per second (legacy check only).,0,snapt_balancer,frontend connections rate
snapt.balancer.frontend.connections.tot_rate,gauge,,connection,second,Rate of total number of frontend connections (legacy check only).,0,snapt_balancer,frontend tot connections rate
snapt.balancer.frontend.denied.req_rate,gauge,,request,second,Number of frontend requests denied due to security concerns (legacy check only).,-1,snapt_balancer,frontend den req rate
snapt.balancer.frontend.denied.resp_rate,gauge,,response,second,Number of frontend responses denied due to security concerns (legacy check only).,-1,snapt_balancer,frontend den resp rate
snapt.balancer.frontend.errors.req_rate,gauge,,error,second,Rate of frontend request errors (legacy check only).,-1,snapt_balancer,frontend err req rate
snapt.balancer.frontend.requests.intercepted,gauge,,request,second,Number of intercepted frontend requests per second (legacy check only).,0,snapt_balancer,frontend intercepted req rate
snapt.balancer.frontend.requests.rate,gauge,,request,second,Number of frontend HTTP requests per second (legacy check only).,0,snapt_balancer,frontend req rate
snapt.balancer.frontend.requests.tot_rate,gauge,,request,second,Rate of total number of frontend HTTP requests (legacy check only).,0,snapt_balancer,frontend total req rate
snapt.balancer.frontend.response.1xx,gauge,,response,,Frontend HTTP responses with 1xx code (legacy check only).,0,snapt_balancer,frontend resp 1xx
snapt.balancer.frontend.response.2xx,gauge,,response,,Frontend HTTP responses with 2xx code (legacy check only).,0,snapt_balancer,frontend resp 2xx
snapt.balancer.frontend.response.3xx,gauge,,response,,Frontend HTTP responses with 3xx code (legacy check only).,0,snapt_balancer,frontend resp 3xx
snapt.balancer.frontend.response.4xx,gauge,,response,,Frontend HTTP responses with 4xx code (legacy check only).,-1,snapt_balancer,frontend resp 4xx
snapt.balancer.frontend.response.5xx,gauge,,response,,Frontend HTTP responses with 5xx code (legacy check only).,-1,snapt_balancer,frontend resp 5xx
snapt.balancer.frontend.response.other,gauge,,response,,Frontend HTTP responses with other code (protocol error) (legacy check only).,0,snapt_balancer,frontend resp other
snapt.balancer.frontend.session.current,gauge,,connection,,Number of active frontend sessions (legacy check only).,0,snapt_balancer,frontend sess
snapt.balancer.frontend.session.limit,gauge,,connection,,Configured frontend session limit (legacy check only).,0,snapt_balancer,frontend sess lim
snapt.balancer.frontend.session.pct,gauge,,percent,,"Percentage of sessions in use (frontend.session.current/frontend.session.limit * 100, legacy check only).",-1,snapt_balancer,frontend sess pct
snapt.balancer.frontend.session.rate,gauge,,connection,second,Number of frontend sessions created per second (legacy check only).,0,snapt_balancer,frontend sess rate
snapt.balancer.listener.bytes.in.total,count,,,,Total number of request bytes since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.bytes.out.total,count,,,,Total number of response bytes since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.current.sessions,gauge,,,,"Number of current sessions on the frontend, backend or server (>= 2.4).",0,snapt_balancer,
snapt.balancer.listener.denied.connections.total,count,,,,Total number of incoming connections blocked on a listener/frontend by a tcp-request connection rule since the worker process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.denied.sessions.total,count,,,,Total number of incoming sessions blocked on a listener/frontend by a tcp-request connection rule since the worker process started,0,snapt_balancer,
snapt.balancer.listener.failed.header.rewriting.total,count,,,,Total number of failed HTTP header rewrites since the worker process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.internal.errors.total,count,,,,Total number of internal errors since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.limit.sessions,gauge,,,,"Frontend/listener/server's maxconn, backend's fullconn (>= 2.4).",0,snapt_balancer,
snapt.balancer.listener.max.sessions,gauge,,,,Highest value of current sessions encountered since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.request.errors.total,count,,,,Total number of invalid requests since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.requests.denied.total,count,,,,Total number of denied requests since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.responses.denied.total,count,,,,Total number of denied responses since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.sessions.total,count,,,,Total number of sessions since process started (>= 2.4).,0,snapt_balancer,
snapt.balancer.listener.status,gauge,,,,"Current status of the service, per state label value (>= 2.4).",0,snapt_balancer,
snapt.balancer.process.active.peers,gauge,,,,Current number of active peers.,0,snapt_balancer,
snapt.balancer.process.build_info,gauge,,,,Build info.,0,snapt_balancer,
snapt.balancer.process.busy.polling.enabled,gauge,,,,Non zero if the busy polling is enabled.,0,snapt_balancer,
snapt.balancer.process.bytes.out.rate,gauge,,,,Number of bytes emitted by current worker process over the last second (>= 2.3).,0,snapt_balancer,
snapt.balancer.process.bytes.out.total,count,,,,Total number of bytes emitted by current worker process since started (>= 2.3).,0,snapt_balancer,
snapt.balancer.process.connected.peers,gauge,,,,Current number of connected peers.,0,snapt_balancer,
snapt.balancer.process.connections.total,count,,,,Total number of created sessions.,0,snapt_balancer,
snapt.balancer.process.current.backend.ssl.key.rate,gauge,,,,Current backend SSL Key computation per second over last elapsed second.,0,snapt_balancer,
snapt.balancer.process.current.connection.rate,gauge,,,,Current number of connections per second over last elapsed second.,0,snapt_balancer,
snapt.balancer.process.current.connections,gauge,,,,Number of active sessions.,0,snapt_balancer,
snapt.balancer.process.current.frontend.ssl.key.rate,gauge,,,,Current frontend SSL Key computation per second over last elapsed second.,0,snapt_balancer,
snapt.balancer.process.current.run.queue,gauge,,,,Current number of tasks in the run-queue.,0,snapt_balancer,
snapt.balancer.process.current.session.rate,gauge,,,,Current number of sessions per second over last elapsed second.,0,snapt_balancer,
snapt.balancer.process.current.ssl.connections,gauge,,,,Number of opened SSL connections.,0,snapt_balancer,
snapt.balancer.process.current.ssl.rate,gauge,,,,Current number of SSL sessions per second over last elapsed second.,0,snapt_balancer,
snapt.balancer.process.current.tasks,gauge,,,,Current number of tasks.,0,snapt_balancer,
snapt.balancer.process.current.zlib.memory,gauge,,,,Current memory used for zlib in bytes.,0,snapt_balancer,
snapt.balancer.process.dropped.logs.total,count,,,,Total number of dropped logs.,0,snapt_balancer,
snapt.balancer.process.failed.resolutions,count,,,,Total number of failed DNS resolutions in current worker process since started (>= 2.3).,0,snapt_balancer,
snapt.balancer.process.frontend.ssl.reuse,gauge,,,,SSL session reuse ratio (percent).,0,snapt_balancer,
snapt.balancer.process.hard.max.connections,gauge,,,,Initial Maximum number of concurrent connections.,0,snapt_balancer,
snapt.balancer.process.http.comp.bytes.in.total,count,,byte,,"Number of bytes per second over last elapsed second, before http compression.",0,snapt_balancer,
snapt.balancer.process.http.comp.bytes.out.total,count,,byte,,"Number of bytes per second over last elapsed second, after http compression.",0,snapt_balancer,
snapt.balancer.process.idle.time.percent,gauge,,,,Idle to total ratio over last sample (percent).,0,snapt_balancer,
snapt.balancer.process.jobs,gauge,,,,"Current number of active jobs (listeners, sessions, open devices).",0,snapt_balancer,
snapt.balancer.process.limit.connection.rate,gauge,,,,Configured maximum number of connections per second.,0,snapt_balancer,
snapt.balancer.process.limit.http.comp,gauge,,,,Configured maximum input compression rate in bytes.,0,snapt_balancer,
snapt.balancer.process.limit.session.rate,gauge,,,,Configured maximum number of sessions per second.,0,snapt_balancer,
snapt.balancer.process.limit.ssl.rate,gauge,,,,Configured maximum number of SSL sessions per second.,0,snapt_balancer,
snapt.balancer.process.listeners,gauge,,,,Current number of active listeners.,0,snapt_balancer,
snapt.balancer.process.max.backend.ssl.key.rate,gauge,,,,Maximum observed backend SSL Key computation per second.,0,snapt_balancer,
snapt.balancer.process.max.connection.rate,gauge,,,,Maximum observed number of connections per second.,0,snapt_balancer,
snapt.balancer.process.max.connections,gauge,,,,Maximum number of concurrent connections.,0,snapt_balancer,
snapt.balancer.process.max.fds,gauge,,,,Maximum number of open file descriptors; 0=unset.,0,snapt_balancer,
snapt.balancer.process.max.frontend.ssl.key.rate,gauge,,,,Maximum observed frontend SSL Key computation per second.,0,snapt_balancer,
snapt.balancer.process.max.memory.bytes,gauge,,,,Per-process memory limit (in bytes); 0=unset.,0,snapt_balancer,
snapt.balancer.process.max.pipes,gauge,,,,Configured maximum number of pipes.,0,snapt_balancer,
snapt.balancer.process.max.session.rate,gauge,,,,Maximum observed number of sessions per second.,0,snapt_balancer,
snapt.balancer.process.max.sockets,gauge,,,,Maximum number of open sockets.,0,snapt_balancer,
snapt.balancer.process.max.ssl.connections,gauge,,,,Configured maximum number of concurrent SSL connections.,0,snapt_balancer,
snapt.balancer.process.max.ssl.rate,gauge,,,,Maximum observed number of SSL sessions per second.,0,snapt_balancer,
snapt.balancer.process.max.zlib.memory,gauge,,,,Configured maximum amount of memory for zlib in bytes.,0,snapt_balancer,
snapt.balancer.process.nbproc,gauge,,,,Configured number of processes.,0,snapt_balancer,
snapt.balancer.process.nbthread,gauge,,,,Configured number of threads.,0,snapt_balancer,
snapt.balancer.process.pipes.free.total,count,,,,Number of pipes unused.,0,snapt_balancer,
snapt.balancer.process.pipes.used.total,count,,,,Number of pipes in used.,0,snapt_balancer,
snapt.balancer.process.pool.allocated.bytes,gauge,,,,Total amount of memory allocated in pools (in bytes).,0,snapt_balancer,
snapt.balancer.process.pool.failures.total,count,,,,Total number of failed pool allocations.,0,snapt_balancer,
snapt.balancer.process.pool.used.bytes,gauge,,,,Total amount of memory used in pools (in bytes).,0,snapt_balancer,
snapt.balancer.process.recv.logs.total,count,,,,"Total number of log messages received by log-forwarding listeners on this worker process since started (>= 2.4).",0,snapt_balancer,
snapt.balancer.process.relative.process.id,gauge,,,,"Relative process id, starting at 1.",0,snapt_balancer,
snapt.balancer.process.requests.total,count,,,,Total number of requests (TCP or HTTP).,0,snapt_balancer,
snapt.balancer.process.spliced.bytes.out.total,count,,,,Total number of bytes emitted by current worker process through a kernel pipe since started (>= 2.3).,0,snapt_balancer,
snapt.balancer.process.ssl.cache.lookups.total,count,,,,Total number of SSL session cache lookups.,0,snapt_balancer,
snapt.balancer.process.ssl.cache.misses.total,count,,,,Total number of SSL session cache misses.,0,snapt_balancer,
snapt.balancer.process.ssl.connections.total,count,,,,Total number of opened SSL connections.,0,snapt_balancer,
snapt.balancer.process.start.time.seconds,gauge,,,,Start time in seconds.,0,snapt_balancer,
snapt.balancer.process.stopping,gauge,,,,Non zero means stopping in progress.,0,snapt_balancer,
snapt.balancer.process.unstoppable.jobs,gauge,,,,Current number of active jobs that can't be stopped during a soft stop.,0,snapt_balancer,
snapt.balancer.process.uptime.seconds,gauge,,,,How long ago this worker process was started (>= 2.4).,0,snapt_balancer,
snapt.balancer.server.bytes.in.total,count,,byte,,Current total of incoming bytes.,0,snapt_balancer,
snapt.balancer.server.bytes.out.total,count,,byte,,Current total of outgoing bytes.,0,snapt_balancer,
snapt.balancer.server.check.code,gauge,,,,"layer5-7 code, if available of the last health check. (>= 2.0)",0,snapt_balancer,
snapt.balancer.server.check.duration.seconds,gauge,,second,,Previously run health check duration (>= 2.0),0,snapt_balancer,
snapt.balancer.server.check.failures.total,count,,,,Total number of failed check (Only counts checks failed when the server is up).,0,snapt_balancer,
snapt.balancer.server.check.last.change.seconds,gauge,,second,,Number of seconds since the last UP<->DOWN transition. (>= 2.0),0,snapt_balancer,
snapt.balancer.server.check.status,gauge,,,,"Status of last health check, if enabled.. <= 2.3 HCHK_STATUS_* values in snapt_balancer doc. >= 2.4 per state label value.",0,snapt_balancer,
snapt.balancer.server.check.up.down.total,count,,,,Total number of UP->DOWN transitions.,0,snapt_balancer,
snapt.balancer.server.client.aborts.total,count,,,,Total number of data transfers aborted by the client.,0,snapt_balancer,
snapt.balancer.server.connect.time.average.seconds,gauge,,,,Avg. connect time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.server.connection.attempts.total,count,,,,Total number of connection establishment attempts.,0,snapt_balancer,
snapt.balancer.server.connection.errors.total,count,,,,Total number of connection errors.,0,snapt_balancer,
snapt.balancer.server.connection.reuses.total,count,,,,Total number of connection reuses.,0,snapt_balancer,
snapt.balancer.server.current.queue,gauge,,,,Current number of queued requests.,0,snapt_balancer,
snapt.balancer.server.current.sessions,gauge,,,,Current number of active sessions.,0,snapt_balancer,
snapt.balancer.server.current.throttle,gauge,,,,"Current throttle percentage for the server, when slowstart is active, or no value if not in slowstart.",0,snapt_balancer,
snapt.balancer.server.downtime.seconds.total,count,,,,Total downtime (in seconds) for the service.,0,snapt_balancer,
snapt.balancer.server.failed.header.rewriting.total,count,,,,Total number of failed header rewriting warnings.,0,snapt_balancer,
snapt.balancer.server.http.responses.total,count,,,,Total number of HTTP responses.,0,snapt_balancer,
snapt.balancer.server.idle.connections.current,gauge,,,,Current number of idle connections available for reuse.,0,snapt_balancer,
snapt.balancer.server.idle.connections.limit,gauge,,,,Limit on the number of available idle connections.,0,snapt_balancer,
snapt.balancer.server.internal.errors.total,count,,,,Total number of internal errors since process started (since >= 2.2).,0,snapt_balancer,
snapt.balancer.server.last.session.seconds,gauge,,,,Number of seconds since last session assigned to server/backend.,0,snapt_balancer,
snapt.balancer.server.limit.sessions,gauge,,,,Configured session limit.,0,snapt_balancer,
snapt.balancer.server.loadbalanced.total,count,,,,"Total number of times a service was selected, either for new sessions, or when redispatching.",0,snapt_balancer,
snapt.balancer.server.max.connect.time.seconds,gauge,,,,Maximum observed time spent waiting for a connection to complete,0,snapt_balancer,
snapt.balancer.server.max.queue,gauge,,,,Maximum observed number of queued requests.,0,snapt_balancer,
snapt.balancer.server.max.queue.time.seconds,gauge,,,,Maximum observed time spent in the queue,0,snapt_balancer,
snapt.balancer.server.max.response.time.seconds,gauge,,,,Maximum observed time spent waiting for a server response,0,snapt_balancer,
snapt.balancer.server.max.session.rate,gauge,,,,Maximum observed number of sessions per second.,0,snapt_balancer,
snapt.balancer.server.max.sessions,gauge,,,,Maximum observed number of active sessions.,0,snapt_balancer,
snapt.balancer.server.max.total.time.seconds,gauge,,,,Maximum observed total request+response time (request+queue+connect+response+processing),0,snapt_balancer,
snapt.balancer.server.need.connections.current,gauge,,,,Estimated needed number of connections (>= 2.3).,0,snapt_balancer,
snapt.balancer.server.queue.limit,gauge,,,,Configured maxqueue for the server (0 meaning no limit).,0,snapt_balancer,
snapt.balancer.server.queue.time.average.seconds,gauge,,,,Avg. queue time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.server.redispatch.warnings.total,count,,,,Total number of redispatch warnings.,0,snapt_balancer,
snapt.balancer.server.response.errors.total,count,,,,Total number of response errors.,0,snapt_balancer,
snapt.balancer.server.response.time.average.seconds,gauge,,,,Avg. response time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.server.responses.denied.total,count,,,,Total number of denied responses.,0,snapt_balancer,
snapt.balancer.server.safe.idle.connections.current,gauge,,,,Current number of safe idle connections (>= 2.3).,0,snapt_balancer,
snapt.balancer.server.retry.warnings.total,count,,,,Total number of retry warnings.,0,snapt_balancer,
snapt.balancer.server.server.aborts.total,count,,,,Total number of data transfers aborted by the server.,0,snapt_balancer,
snapt.balancer.server.server.idle.connections.current,gauge,,,,Current number of idle connections available for reuse,0,snapt_balancer,
snapt.balancer.server.server.idle.connections.limit,gauge,,,,Limit on the number of available idle connections,0,snapt_balancer,
snapt.balancer.server.sessions.total,count,,,,Total number of sessions.,0,snapt_balancer,
snapt.balancer.server.status,gauge,,,,"Current status of the service. <= 2.3: gauge value determines state (frontend: 0=STOP, 1=UP, 2=FULL - backend: 0=DOWN, 1=UP - server: 0=DOWN, 1=UP, 2=MAINT, 3=DRAIN, 4=NOLB). >= 2.4 per state label value.",0,snapt_balancer,
snapt.balancer.server.total.time.average.seconds,gauge,,,,Avg. total time for last 1024 successful connections.,0,snapt_balancer,
snapt.balancer.server.unsafe.idle.connections.current,gauge,,,,Current number of unsafe idle connections (>= 2.3).,0,snapt_balancer,
snapt.balancer.server.used.connections.current,gauge,,,,Current number of connections in use (>= 2.3).,0,snapt_balancer,
snapt.balancer.server.uweight,gauge,,,,Server's user weight or sum of active servers' user weights for a backend (>= 2.4).,0,snapt_balancer,
snapt.balancer.server.weight,gauge,,,,Service weight.,0,snapt_balancer,
snapt.balancer.sticktable.size,gauge,,,,"Maximum number of elements the table can hold (<= 2.3 through unix socket, >= 2.4 through prometheus).",0,snapt_balancer,
snapt.balancer.sticktable.used,gauge,,,,"Number of elements in the table (<= 2.3 through unix socket, >= 2.4 through prometheus).",0,snapt_balancer,
nginx.net.writing,gauge,,connection,,The number of connections waiting on upstream responses and/or writing responses back to the client.,0,nginx,conns writing
nginx.net.waiting,gauge,,connection,,The number of keep-alive connections waiting for work.,0,nginx,conns waiting
nginx.net.reading,gauge,,connection,,The number of connections reading client requests.,0,nginx,conns reading
nginx.net.connections,gauge,,connection,,The total number of active connections.,0,nginx,conns
nginx.net.request_per_s,rate,,request,second,Rate of requests processed.,0,nginx,req/s
nginx.net.conn_opened_per_s,rate,,connection,second,Rate of connections opened.,0,nginx,conns opened/s
nginx.net.conn_dropped_per_s,rate,,connection,second,Rate of connections dropped.,-1,nginx,conns dropped/s
nginx.cache.bypass.bytes,gauge,,byte,,The total number of bytes read from the proxied server,0,nginx,cache bypass bytes
nginx.cache.bypass.bytes_count,count,,byte,,The total number of bytes read from the proxied server (shown as count),0,nginx,cache bypass bytes
nginx.cache.bypass.bytes_written,gauge,,byte,,The total number of bytes written to the cache,0,nginx,cache bypass bytes_written
nginx.cache.bypass.bytes_written_count,count,,byte,,The total number of bytes written to the cache (shown as count),0,nginx,cache bypass bytes_written
nginx.cache.bypass.responses,gauge,,response,,The total number of responses not taken from the cache,0,nginx,cache bypass responses
nginx.cache.bypass.responses_count,count,,response,,The total number of responses not taken from the cache (shown as count),0,nginx,cache bypass responses
nginx.cache.bypass.responses_written,gauge,,response,,The total number of responses written to the cache,0,nginx,cache bypass responses_written
nginx.cache.bypass.responses_written_count,count,,response,,The total number of responses written to the cache (shown as count),0,nginx,cache bypass responses_written
nginx.cache.cold,gauge,,response,,A boolean value indicating whether the cache loader process is still loading data from disk into the cache,0,nginx,cache cold
nginx.cache.expired.bytes,gauge,,byte,,The total number of bytes read from the proxied server,0,nginx,cache expired bytes
nginx.cache.expired.bytes_count,count,,byte,,The total number of bytes read from the proxied server (shown as count),0,nginx,cache expired bytes
nginx.cache.expired.bytes_written,gauge,,byte,,The total number of bytes written to the cache,0,nginx,cache expired bytes_written
nginx.cache.expired.bytes_written_count,count,,byte,,The total number of bytes written to the cache (shown as count),0,nginx,cache expired bytes_written
nginx.cache.expired.responses,gauge,,response,,The total number of responses not taken from the cache,0,nginx,cache expired responses
nginx.cache.expired.responses_count,count,,response,,The total number of responses not taken from the cache (shown as count),0,nginx,cache expired responses
nginx.cache.expired.responses_written,gauge,,response,,The total number of responses written to the cache,0,nginx,cache expired responses_written
nginx.cache.expired.responses_written_count,count,,response,,The total number of responses written to the cache (shown as count),0,nginx,cache expired responses_written
nginx.cache.hit.bytes,gauge,,byte,,The total number of bytes read from the cache,0,nginx,cache hit bytes
nginx.cache.hit.bytes_count,count,,byte,,The total number of bytes read from the cache (shown as count),0,nginx,cache hit bytes
nginx.cache.hit.responses,gauge,,response,,The total number of responses read from the cache,0,nginx,cache hit responses
nginx.cache.hit.responses_count,count,,response,,The total number of responses read from the cache (shown as count),0,nginx,cache hit responses
nginx.cache.max_size,gauge,,byte,,The limit on the maximum size of the cache specified in the configuration,0,nginx,cache max size
nginx.cache.miss.bytes,gauge,,byte,,The total number of bytes read from the proxied server,0,nginx,cache miss bytes
nginx.cache.miss.bytes_count,count,,byte,,The total number of bytes read from the proxied server (shown as count),0,nginx,cache miss bytes
nginx.cache.miss.bytes_written,gauge,,byte,,The total number of bytes written to the cache,0,nginx,cache miss bytes_written
nginx.cache.miss.bytes_written_count,count,,byte,,The total number of bytes written to the cache (shown as count),0,nginx,cache miss bytes_written
nginx.cache.miss.responses,gauge,,response,,The total number of responses not taken from the cache,0,nginx,cache miss responses
nginx.cache.miss.responses_count,count,,response,,The total number of responses not taken from the cache (shown as count),0,nginx,cache miss responses
nginx.cache.miss.responses_written,gauge,,response,,The total number of responses written to the cache,0,nginx,cache miss responses_written
nginx.cache.miss.responses_written_count,count,,response,,The total number of responses written to the cache,0,nginx,cache miss responses_written
nginx.cache.revalidated.bytes,gauge,,byte,,The total number of bytes read from the cache,0,nginx,cache revalidated bytes
nginx.cache.revalidated.bytes_count,count,,byte,,The total number of bytes read from the cache (shown as count),0,nginx,cache revalidated bytes
nginx.cache.revalidated.response,gauge,,response,,The total number of responses read from the cache,0,nginx,cache revalidated responses
nginx.cache.revalidated.response_count,count,,response,,The total number of responses read from the cache (shown as count),0,nginx,cache revalidated responses
nginx.cache.size,gauge,,response,,The current size of the cache,0,nginx,cache size
nginx.cache.stale.bytes,gauge,,byte,,The total number of bytes read from the cache,0,nginx,cache stale bytes
nginx.cache.stale.bytes_count,count,,byte,,The total number of bytes read from the cache (shown as count),0,nginx,cache stale bytes
nginx.cache.stale.responses,gauge,,response,,The total number of responses read from the cache,0,nginx,cache stale responses
nginx.cache.stale.responses_count,count,,response,,The total number of responses read from the cache (shown as count),0,nginx,cache stale responses
nginx.cache.updating.bytes,gauge,,byte,,The total number of bytes read from the cache,0,nginx,cache updating bytes
nginx.cache.updating.bytes_count,count,,byte,,The total number of bytes read from the cache (shown as count),0,nginx,cache updating bytes
nginx.cache.updating.responses,gauge,,response,,The total number of responses read from the cache,0,nginx,cache updating responses
nginx.cache.updating.responses_count,count,,response,,The total number of responses read from the cache (shown as count),0,nginx,cache updating responses
nginx.connections.accepted,gauge,,connection,,The total number of accepted client connections.,0,nginx,conns accepted
nginx.connections.accepted_count,count,,connection,,The total number of accepted client connections (shown as count).,0,nginx,conns accepted
nginx.connections.active,gauge,,connection,,The current number of active client connections.,0,nginx,conns active
nginx.connections.dropped,gauge,,connection,,The total number of dropped client connections.,0,nginx,conns dropped
nginx.connections.dropped_count,count,,connection,,The total number of dropped client connections (shown as count).,0,nginx,conns dropped
nginx.connections.idle,gauge,,connection,,The current number of idle client connections.,0,nginx,conns idle
nginx.generation,gauge,,refresh,,The total number of configuration reloads,0,nginx,generation
nginx.generation_count,count,,refresh,,The total number of configuration reloads (shown as count),0,nginx,generation
nginx.load_timestamp,gauge,,millisecond,,Time of the last reload of configuration (time since Epoch).,0,nginx,load timestamp
nginx.pid,gauge,,,,The ID of the worker process that handled status request.,0,nginx,pid
nginx.ppid,gauge,,,,The ID of the master process that started the worker process,0,nginx,ppid
nginx.processes.respawned,gauge,,process,,The total number of abnormally terminated and respawned child processes.,0,nginx,proc respawned
nginx.processes.respawned_count,count,,process,,The total number of abnormally terminated and respawned child processes (shown as count).,0,nginx,proc respawned
nginx.requests.current,gauge,,request,,The current number of client requests.,0,nginx,req current
nginx.requests.total,gauge,,request,,The total number of client requests.,0,nginx,req total
nginx.requests.total_count,count,,request,,The total number of client requests (shown as count).,0,nginx,req total
nginx.server_zone.discarded,gauge,,request,,The total number of requests completed without sending a response.,0,nginx,server zone discarded
nginx.server_zone.discarded_count,count,,request,,The total number of requests completed without sending a response (shown as count).,0,nginx,server zone discarded
nginx.server_zone.processing,gauge,,request,,The number of client requests that are currently being processed.,0,nginx,server zone processing
nginx.server_zone.received,gauge,,byte,,The total amount of data received from clients.,0,nginx,server zone rcvd
nginx.server_zone.received_count,count,,byte,,The total amount of data received from clients (shown as count).,0,nginx,server zone rcvd
nginx.server_zone.requests,gauge,,request,,The total number of client requests received from clients.,0,nginx,server zone req
nginx.server_zone.requests_count,count,,request,,The total number of client requests received from clients (shown as count).,0,nginx,server zone req
nginx.server_zone.responses.1xx,gauge,,response,,The number of responses with 1xx status code.,0,nginx,server zone resp 1xx
nginx.server_zone.responses.1xx_count,count,,response,,The number of responses with 1xx status code (shown as count).,0,nginx,server zone resp 1xx
nginx.server_zone.responses.2xx,gauge,,response,,The number of responses with 2xx status code.,0,nginx,server zone resp 2xx
nginx.server_zone.responses.2xx_count,count,,response,,The number of responses with 2xx status code (shown as count).,0,nginx,server zone resp 2xx
nginx.server_zone.responses.3xx,gauge,,response,,The number of responses with 3xx status code.,0,nginx,server zone resp 3xx
nginx.server_zone.responses.3xx_count,count,,response,,The number of responses with 3xx status code (shown as count).,0,nginx,server zone resp 3xx
nginx.server_zone.responses.4xx,gauge,,response,,The number of responses with 4xx status code.,0,nginx,server zone resp 4xx
nginx.server_zone.responses.4xx_count,count,,response,,The number of responses with 4xx status code (shown as count).,0,nginx,server zone resp 4xx
nginx.server_zone.responses.5xx,gauge,,response,,The number of responses with 5xx status code.,0,nginx,server zone resp 5xx
nginx.server_zone.responses.5xx_count,count,,response,,The number of responses with 5xx status code (shown as count).,0,nginx,server zone resp 5xx
nginx.server_zone.responses.total,gauge,,response,,The total number of responses sent to clients.,0,nginx,server zone resp total
nginx.server_zone.responses.total_count,count,,response,,The total number of responses sent to clients (shown as count).,0,nginx,server zone resp total
nginx.server_zone.sent,gauge,,byte,,The total amount of data sent to clients.,0,nginx,server zone sent
nginx.server_zone.sent_count,count,,byte,,The total amount of data sent to clients (shown as count).,0,nginx,server zone sent
nginx.slab.pages.free,gauge,,page,,The current number of free memory pages,0,nginx,slab pages free
nginx.slab.pages.used,gauge,,page,,The current number of used memory pages,0,nginx,slab pages used
nginx.slab.slots.fails,gauge,,request,,The number of unsuccessful attempts to allocate memory of specified size,-1,nginx,slab slots fails
nginx.slab.slots.fails_count,count,,request,,The number of unsuccessful attempts to allocate memory of specified size (shown as count),-1,nginx,slab slots fails
nginx.slab.slots.free,gauge,,,,The current number of free memory slots,-1,nginx,slab slots free
nginx.slab.slots.reqs,gauge,,request,,The total number of attempts to allocate memory of specified size,-1,nginx,slab slots reqs
nginx.slab.slots.reqs_count,count,,request,,The total number of attempts to allocate memory of specified size (shown as count),-1,nginx,slab slots reqs
nginx.slab.slots.used,gauge,,,,The current number of used memory slots,-1,nginx,slab slots used
nginx.ssl.handshakes,gauge,,,,The total number of successful SSL handshakes.,0,nginx,ssl handshakes
nginx.ssl.handshakes_count,count,,,,The total number of successful SSL handshakes (shown as count).,0,nginx,ssl handshakes
nginx.ssl.handshakes_failed,gauge,,,,The total number of failed SSL handshakes.,-1,nginx,ssl handshakes failed
nginx.ssl.handshakes_failed_count,count,,,,The total number of failed SSL handshakes (shown as count).,-1,nginx,ssl handshakes failed
nginx.ssl.session_reuses,gauge,,,,The total number of session reuses during SSL handshake.,0,nginx,ssl session reuses
nginx.ssl.session_reuses_count,count,,,,The total number of session reuses during SSL handshake (shown as count).,0,nginx,ssl session reuses
nginx.stream.server_zone.connections,gauge,,connection,,The total number of connections accepted from clients,0,nginx,stream server zone discarded
nginx.stream.server_zone.connections_count,count,,connection,,The total number of connections accepted from clients (shown as count),0,nginx,stream server zone discarded
nginx.stream.server_zone.discarded,gauge,,request,,The total number of requests completed without sending a response.,0,nginx,stream server zone discarded
nginx.stream.server_zone.discarded_count,count,,request,,The total number of requests completed without sending a response (shown as count).,0,nginx,stream server zone discarded
nginx.stream.server_zone.processing,gauge,,request,,The number of client requests that are currently being processed.,0,nginx,stream server zone processing
nginx.stream.server_zone.received,gauge,,byte,,The total amount of data received from clients.,0,nginx,stream server zone rcvd
nginx.stream.server_zone.received_count,count,,byte,,The total amount of data received from clients (shown as count).,0,nginx,stream server zone rcvd
nginx.stream.server_zone.sent,gauge,,byte,,The total amount of data sent to clients.,0,nginx,stream server zone sent
nginx.stream.server_zone.sent_count,count,,byte,,The total amount of data sent to clients (shown as count).,0,nginx,stream server zone sent
nginx.stream.server_zone.sessions.2xx,gauge,,session,,The number of responses with 2xx status code.,0,nginx,stream server zone sessions 2xx
nginx.stream.server_zone.sessions.2xx_count,count,,session,,The number of responses with 2xx status code (shown as count).,0,nginx,stream server zone sessions 2xx
nginx.stream.server_zone.sessions.4xx,gauge,,session,,The number of responses with 4xx status code.,0,nginx,stream server zone sessions 4xx
nginx.stream.server_zone.sessions.4xx_count,count,,session,,The number of responses with 4xx status code (shown as count).,0,nginx,stream server zone sessions 4xx
nginx.stream.server_zone.sessions.5xx,gauge,,session,,The number of responses with 5xx status code.,0,nginx,stream server zone sessions 5xx
nginx.stream.server_zone.sessions.5xx_count,count,,session,,The number of responses with 5xx status code (shown as count).,0,nginx,stream server zone sessions 5xx
nginx.stream.server_zone.sessions.total,gauge,,session,,The total number of responses sent to clients.,0,nginx,stream server zone sessions total
nginx.stream.server_zone.sessions.total_count,count,,session,,The total number of responses sent to clients (shown as count).,0,nginx,stream server zone sessions total
nginx.stream.upstream.peers.active,gauge,,connection,,The current number of connections,0,nginx,stream upstr peers active
nginx.stream.upstream.peers.backup,gauge,,,,A boolean value indicating whether the server is a backup server.,0,nginx,stream upstr peers backup
nginx.stream.upstream.peers.connections,gauge,,connection,,The total number of client connections forwarded to this server.,0,nginx,stream upstr peers conn
nginx.stream.upstream.peers.connections_count,count,,connection,,The total number of client connections forwarded to this server (shown as count).,0,nginx,stream upstr peers conn
nginx.stream.upstream.peers.downstart,gauge,,millisecond,,The time (time since Epoch) when the server became "unavail" or "checking" or "unhealthy",0,nginx,stream upstr peers downstart
nginx.stream.upstream.peers.downtime,gauge,,millisecond,,Total time the server was in the "unavail" or "checking" or "unhealthy" states.,-1,nginx,stream upstr peers downtime
nginx.stream.upstream.peers.fails,gauge,,error,,The total number of unsuccessful attempts to communicate with the server.,-1,nginx,stream upstr peers fails
nginx.stream.upstream.peers.fails_count,count,,error,,The total number of unsuccessful attempts to communicate with the server (shown as count).,-1,nginx,stream upstr peers fails
nginx.stream.upstream.peers.health_checks.checks,gauge,,request,,The total number of health check requests made.,0,nginx,stream upstr peers health checks
nginx.stream.upstream.peers.health_checks.checks_count,count,,request,,The total number of health check requests made (shown as count).,0,nginx,stream upstr peers health checks
nginx.stream.upstream.peers.health_checks.fails,gauge,,error,,The number of failed health checks.,-1,nginx,stream upstr peers health fails
nginx.stream.upstream.peers.health_checks.fails_count,count,,error,,The number of failed health checks (shown as count).,-1,nginx,stream upstr peers health fails
nginx.stream.upstream.peers.health_checks.last_passed,gauge,,,,Boolean indicating if the last health check request was successful and passed tests.,0,nginx,stream upstr peers health last
nginx.stream.upstream.peers.health_checks.unhealthy,gauge,,,,How many times the server became unhealthy (state "unhealthy").,-1,nginx,stream upstr peers health last
nginx.stream.upstream.peers.health_checks.unhealthy_count,count,,,,How many times the server became unhealthy (state "unhealthy") (shown as count).,-1,nginx,stream upstr peers health last
nginx.stream.upstream.peers.id,gauge,,,,The ID of the server.,0,nginx,stream upstr peers id
nginx.stream.upstream.peers.received,gauge,,byte,,The total number of bytes received from this server.,0,nginx,stream upstr peers rcvd
nginx.stream.upstream.peers.received_count,count,,byte,,The total number of bytes received from this server (shown as count).,0,nginx,stream upstr peers rcvd
nginx.stream.upstream.peers.selected,gauge,,millisecond,,The time (time since Epoch) when the server was last selected to process a connection.,0,nginx,stream upstr peers selected
nginx.stream.upstream.peers.sent,gauge,,byte,,The total number of bytes sent to this server.,0,nginx,stream upstr peers sent
nginx.stream.upstream.peers.sent_count,count,,byte,,The total number of bytes sent to this server (shown as count).,0,nginx,stream upstr peers sent
nginx.stream.upstream.peers.unavail,gauge,,,,How many times the server became unavailable for client connections (state "unavail").,0,nginx,stream upstr peers unavail
nginx.stream.upstream.peers.unavail_count,count,,,,How many times the server became unavailable for client connections (state "unavail") (shown as count).,0,nginx,stream upstr peers unavail
nginx.stream.upstream.peers.weight,gauge,,,,Weight of the server.,0,nginx,stream upstr peers weight
nginx.stream.upstream.zombies,gauge,,host,,The current number of servers removed from the group but still processing active client connections.,0,nginx,stream upstr zombies
nginx.timestamp,gauge,,millisecond,,Current time since Epoch.,0,nginx,timestamp
nginx.upstream.keepalive,gauge,,connection,,The current number of idle keepalive connections.,0,nginx,upstr keepalive
nginx.upstream.peers.active,gauge,,connection,,The current number of active connections.,0,nginx,upstr peers active
nginx.upstream.peers.backup,gauge,,,,A boolean value indicating whether the server is a backup server.,0,nginx,upstr peers backup
nginx.upstream.peers.downstart,gauge,,millisecond,,The time (since Epoch) when the server became "unavail" or "unhealthy".,0,nginx,upstr peers downstart
nginx.upstream.peers.downtime,gauge,,millisecond,,Total time the server was in the "unavail" and "unhealthy" states.,0,nginx,upstr peers downtime
nginx.upstream.peers.fails,gauge,,,,The total number of unsuccessful attempts to communicate with the server.,-1,nginx,upstr peers fails
nginx.upstream.peers.fails_count,count,,,,The total number of unsuccessful attempts to communicate with the server (shown as count).,-1,nginx,upstr peers fails
nginx.upstream.peers.health_checks.checks,gauge,,,,The total number of health check requests made.,0,nginx,upstr peers health chk
nginx.upstream.peers.health_checks.checks_count,count,,,,The total number of health check requests made (shown as count).,0,nginx,upstr peers health chk
nginx.upstream.peers.health_checks.fails,gauge,,,,The number of failed health checks.,-1,nginx,upstr peers health chk fail
nginx.upstream.peers.health_checks.fails_count,count,,,,The number of failed health checks (shown as count).,-1,nginx,upstr peers health chk fail
nginx.upstream.peers.health_checks.last_passed,gauge,,,,Boolean indicating if the last health check request was successful and passed tests.,0,nginx,upstr peers health chk last passed
nginx.upstream.peers.health_checks.unhealthy,gauge,,,,How many times the server became unhealthy (state "unhealthy").,-1,nginx,upstr peers health chk unhealthy
nginx.upstream.peers.health_checks.unhealthy_count,count,,,,How many times the server became unhealthy (state "unhealthy") (shown as count).,-1,nginx,upstr peers health chk unhealthy
nginx.upstream.peers.id,gauge,,,,The ID of the server.,0,nginx,upstr peers id
nginx.upstream.peers.received,gauge,,byte,,The total amount of data received from this server.,0,nginx,upstr peers rec
nginx.upstream.peers.received_count,count,,byte,,The total amount of data received from this server (shown as count).,0,nginx,upstr peers rec
nginx.upstream.peers.requests,gauge,,request,,The total number of client requests forwarded to this server.,0,nginx,upstr peers req
nginx.upstream.peers.requests_count,count,,request,,The total number of client requests forwarded to this server (shown as count).,0,nginx,upstr peers req
nginx.upstream.peers.responses.1xx,gauge,,response,,The number of responses with 1xx status code.,0,nginx,upstr peers resp 1xx
nginx.upstream.peers.responses.1xx_count,count,,response,,The number of responses with 1xx status code (shown as count).,0,nginx,upstr peers resp 1xx count
nginx.upstream.peers.responses.2xx,gauge,,response,,The number of responses with 2xx status code.,0,nginx,upstr peers resp 2xx
nginx.upstream.peers.responses.2xx_count,count,,response,,The number of responses with 2xx status code (shown as count).,0,nginx,upstr peers resp 2xx count
nginx.upstream.peers.responses.3xx,gauge,,response,,The number of responses with 3xx status code.,0,nginx,upstr peers resp 3xx
nginx.upstream.peers.responses.3xx_count,count,,response,,The number of responses with 3xx status code (shown as count).,0,nginx,upstr peers resp 3xx count
nginx.upstream.peers.responses.4xx,gauge,,response,,The number of responses with 4xx status code.,0,nginx,upstr peers resp 4xx
nginx.upstream.peers.responses.4xx_count,count,,response,,The number of responses with 4xx status code (shown as count).,0,nginx,upstr peers resp 4xx count
nginx.upstream.peers.responses.5xx,gauge,,response,,The number of responses with 5xx status code.,0,nginx,upstr peers resp 5xx
nginx.upstream.peers.responses.5xx_count,count,,response,,The number of responses with 5xx status code (shown as count).,0,nginx,upstr peers resp 5xx count
nginx.upstream.peers.responses.total,gauge,,response,,The total number of responses obtained from this server.,0,nginx,upstr peers resp
nginx.upstream.peers.responses.total_count,count,,response,,The total number of responses obtained from this server (shown as count).,0,nginx,upstr peers resp
nginx.upstream.peers.selected,gauge,,millisecond,,The time (since Epoch) when the server was last selected to process a request (1.7.5).,0,nginx,upstr peers sel
nginx.upstream.peers.sent,gauge,,byte,,The total amount of data sent to this server.,0,nginx,upstr peers sent
nginx.upstream.peers.sent_count,count,,byte,,The total amount of data sent to this server (shown as count).,0,nginx,upstr peers sent
nginx.upstream.peers.unavail,gauge,,,,How many times the server became unavailable for client requests (state "unavail") due to the number of unsuccessful attempts reaching the max_fails threshold.,0,nginx,upstr peers unavail
nginx.upstream.peers.unavail_count,count,,,,How many times the server became unavailable for client requests (state "unavail") due to the number of unsuccessful attempts reaching the max_fails threshold (shown as count).,0,nginx,upstr peers unavail
nginx.upstream.peers.weight,gauge,,,,Weight of the server.,0,nginx,upstr peers weight
nginx.stream.zone_sync.status.nodes_online,gauge,,,,The number of peers this node is connected to.,0,nginx,Count of nodes online.
nginx.stream.zone_sync.status.msgs_in,gauge,,message,,The number of messages received by this node.,0,nginx,Total count of messages received.
nginx.stream.zone_sync.status.msgs_out,gauge,,message,,The number of messages sent by this node.,0,nginx,Total count of messages sent.
nginx.stream.zone_sync.status.bytes_in,gauge,,byte,,The number of bytes received by this node.,0,nginx,Total count of bytes received.
nginx.stream.zone_sync.status.bytes_out,gauge,,byte,,The number of bytes sent by this node.,0,nginx,Total coun tof bytes sent.
nginx.stream.zone_sync.zone.records_total,gauge,,,,The total number of records stored in the shared memory zone.,0,nginx,Count of records in memory zone.
nginx.stream.zone_sync.zone.records_pending,gauge,,,,The number of records that need to be sent to the cluster.,0,nginx, Count of records pending.
nginx.version,gauge,,,,Version of nginx.,0,nginx,version
